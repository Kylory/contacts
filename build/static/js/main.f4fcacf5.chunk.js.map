{"version":3,"sources":["components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/contacts/contactsSelectors.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","components/Container/Container.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/ContactForm/ContactForm.jsx","components/BasicModal/BasicModal.jsx","components/EditContactModal/EditContactModal.jsx","components/ContactsList/ContactsList.jsx","components/SearchContacts/SearchContacts.jsx","App.js","index.js","redux/auth/AuthSlice.js","redux/auth/authSelectors.js","redux/auth/authOperations.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/EditContactModal/EditContactModal.module.css","components/UserMenu/UserMenu.module.css","components/SearchContacts/SearchContacts.module.css"],"names":["module","exports","axios","defaults","baseURL","DB_fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","contacts","DB_postContact","name","number","post","DB_deleteContact","id","delete","DB_updateContactById","contactId","contact","put","filterContacts","createAction","openModal","closeModal","getEditContactId","clearEditContactId","contactsReducer","createReducer","contactsOperations","fulfilled","payload","filterReducer","isLoadingReducer","pending","rejected","errorReducer","isModalOpenReducer","editContactIdReducer","rootReducer","combineReducers","contactsList","filter","isLoading","error","isModalOpen","editContactId","getContacts","state","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","PrivateRoute","children","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","to","PublicRoute","restricted","shouldRedirect","Container","className","styles","container","AuthNav","link","activeClassName","activeLink","Navigation","exact","UserMenu","getUserName","dispatch","useDispatch","IconButton","button","type","onClick","authOperations","logOut","size","AppBar","nav","ContactForm","buttonTitle","useState","setName","setNumber","isButtonDisable","addContact","handleChange","e","target","value","reset","contactForm","onSubmit","preventDefault","noValidate","autoComplete","TextField","onChange","label","variant","Button","disabled","style","position","top","left","transform","width","bgcolor","boxShadow","p","BasicModal","contactsSelectors","handleClose","Modal","open","onClose","Box","sx","EditContact","find","_id","handleSubmit","editButton","ContactsList","filteredContacts","handleOpen","currentTarget","getAttribute","useEffect","message","map","contactid","deleteButton","deleteItem","SearchContacts","searchContactsWrapper","searchContacts","HomeView","lazy","RegisterView","LogInView","App","isFetchingCurrentUser","getUserInfo","refreshPage","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById","authSlice","createSlice","initialState","user","email","token","registerUserRejected","logInUserRejected","extraReducers","action","headers","common","Authorization","registerUser","credentials","response","ResponseBody","logIn","thunkAPI","getState","LStoken"],"mappings":"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","file":"static/js/main.f4fcacf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__35SWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AppBar_nav__1Q6ay\",\"link\":\"AppBar_link__1XPh4\",\"activeLink\":\"AppBar_activeLink__3Aofp\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://contacts-back.herokuapp.com';\r\n// axios.defaults.baseURL = 'http://localhost:4000/api';\r\n\r\nexport const DB_fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data.contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const DB_postContact = createAsyncThunk(\r\n  'contacts/postContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', {\r\n        name: `${name}`,\r\n        number: `${number}`,\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const DB_deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const DB_updateContactById = createAsyncThunk(\r\n  'contacts/updateContact',\r\n  async ({ contactId, contact }, { rejectWithValue }) => {\r\n    try {\r\n      await axios.put(`/contacts/${contactId}`, contact);\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const filterContacts = createAction('contacts/filterContacts');\r\n\r\nexport const openModal = createAction('contacts/openModal');\r\nexport const closeModal = createAction('contacts/closeModal');\r\n\r\nexport const getEditContactId = createAsyncThunk(\r\n  'contacts/getEditContactId',\r\n  async (contactId, { rejectWithValue }) => {\r\n    return contactId;\r\n  },\r\n);\r\nexport const clearEditContactId = createAction('contacts/clearEditContactId');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { contactsOperations } from 'redux/contacts';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [contactsOperations.DB_fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  // [contactsOperations.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsOperations.DB_postContact.fulfilled]: () => {},\r\n  // [contactsOperations.deleteContact]: (state, { payload }) =>\r\n  // state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactsOperations.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [contactsOperations.DB_fetchContacts.pending]: () => true,\r\n  [contactsOperations.DB_fetchContacts.fulfilled]: () => false,\r\n  [contactsOperations.DB_fetchContacts.rejected]: () => false,\r\n\r\n  [contactsOperations.DB_postContact.pending]: () => true,\r\n  [contactsOperations.DB_postContact.fulfilled]: () => false,\r\n  [contactsOperations.DB_postContact.rejected]: () => false,\r\n\r\n  [contactsOperations.DB_deleteContact.pending]: () => true,\r\n  [contactsOperations.DB_deleteContact.fulfilled]: () => false,\r\n  [contactsOperations.DB_deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [contactsOperations.DB_fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_fetchContacts.pending]: () => null,\r\n\r\n  [contactsOperations.DB_postContact.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_postContact.pending]: () => null,\r\n\r\n  [contactsOperations.DB_deleteContact.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_deleteContact.pending]: () => null,\r\n});\r\n\r\nconst isModalOpenReducer = createReducer(false, {\r\n  [contactsOperations.openModal]: () => true,\r\n  [contactsOperations.closeModal]: () => false,\r\n});\r\n\r\nconst editContactIdReducer = createReducer(null, {\r\n  [contactsOperations.getEditContactId.fulfilled]: (_, { payload }) => payload,\r\n  [contactsOperations.clearEditContactId]: () => null,\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  contactsList: contactsReducer,\r\n  filter: filterReducer,\r\n  isLoading: isLoadingReducer,\r\n  error: errorReducer,\r\n  isModalOpen: isModalOpenReducer,\r\n  editContactId: editContactIdReducer,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.contactsList;\r\nconst getFilter = state => state.contacts.filter;\r\nconst isLoading = state => state.contacts.isLoading;\r\nconst error = state => state.contacts.error;\r\nconst isModalOpen = state => state.contacts.isModalOpen;\r\nconst editContactId = state => state.contacts.editContactId;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    if (contacts && filter) {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      const filteredContact = contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n\r\n      return filteredContact;\r\n    }\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport {\r\n  getContacts,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  isLoading,\r\n  error,\r\n  isModalOpen,\r\n  editContactId,\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { contactsReducer } from \"redux/contacts\";\r\nimport { authReducer } from \"./auth\";\r\n\r\nconst middleware = (getDefaultMiddleware) => [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer.rootReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"redux/auth\";\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = \"/\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"redux/auth\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  redirectTo = \"/\",\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import styles from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthNav.module.css\";\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div className={styles.AuthNav}>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { authSelectors } from \"redux/auth\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  return (\r\n    <>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          className={styles.link}\r\n          activeClassName={styles.activeLink}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { authSelectors, authOperations } from 'redux/auth';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport styles from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.UserMenu}>\r\n      <AccountCircleOutlinedIcon />\r\n      <span className={styles.name}>Hello, {name}</span>\r\n      <IconButton\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          dispatch(authOperations.logOut());\r\n        }}\r\n        size=\"small\"\r\n      >\r\n        <ExitToAppTwoToneIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"redux/auth\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport styles from \"./AppBar.module.css\";\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </nav>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactsOperations } from 'redux/contacts';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ buttonTitle }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const isButtonDisable = name === '' || number === '';\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addContact = async () => {\r\n    await dispatch(\r\n      contactsOperations.DB_postContact({\r\n        name: name,\r\n        number: number,\r\n      }),\r\n    );\r\n    dispatch(contactsOperations.DB_fetchContacts());\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    addContact();\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className={styles.contactForm}\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          className={styles.name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          size=\"small\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        <TextField\r\n          className={styles.number}\r\n          onChange={handleChange}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          value={number}\r\n          size=\"small\"\r\n          label=\"Number\"\r\n          variant=\"outlined\"\r\n        />\r\n        <Button\r\n          className={styles.button}\r\n          disabled={isButtonDisable}\r\n          type=\"submit\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n        >\r\n          {buttonTitle}\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal({ children }) {\r\n  const isModalOpen = useSelector(contactsSelectors.isModalOpen);\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => {\r\n    dispatch(contactsOperations.closeModal());\r\n    dispatch(contactsOperations.clearEditContactId());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isModalOpen}\r\n        onClose={handleClose}\r\n        onSubmit={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>{children}</Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport styles from './EditContactModal.module.css';\r\n\r\nexport default function EditContact({ buttonTitle }) {\r\n  const contactId = useSelector(contactsSelectors.editContactId);\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const contact = contacts.find(contact => contact._id === contactId);\r\n\r\n  const [name, setName] = useState(contact.name);\r\n  const [number, setNumber] = useState(contact.number);\r\n  const isButtonDisable = name === '' || number === '';\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      contactId: contactId,\r\n      contact: {\r\n        name: name,\r\n        number: number,\r\n      },\r\n    };\r\n\r\n    await dispatch(contactsOperations.DB_updateContactById(data));\r\n    dispatch(contactsOperations.DB_fetchContacts());\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className={styles.contactForm}\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          className={styles.name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          size=\"small\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        <TextField\r\n          className={styles.number}\r\n          onChange={handleChange}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          value={number}\r\n          size=\"small\"\r\n          label=\"Number\"\r\n          variant=\"outlined\"\r\n        />\r\n        <Button\r\n          className={styles.editButton}\r\n          disabled={isButtonDisable}\r\n          type=\"submit\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n        >\r\n          {buttonTitle}\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\r\nimport { authSelectors } from 'redux/auth';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelTwoToneIcon from '@material-ui/icons/CancelTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport styles from './ContactsList.module.css';\r\n\r\nimport BasicModal from '../BasicModal/BasicModal';\r\nimport EditContact from 'components/EditContactModal/EditContactModal';\r\n\r\nexport default function ContactsList() {\r\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  const error = useSelector(contactsSelectors.error);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpen = async e => {\r\n    const contactId = e.currentTarget.getAttribute('contactid');\r\n    await dispatch(contactsOperations.getEditContactId(contactId));\r\n    dispatch(contactsOperations.openModal());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(contactsOperations.DB_fetchContacts());\r\n    }\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  async function deleteItem(id) {\r\n    await dispatch(contactsOperations.DB_deleteContact(id));\r\n    dispatch(contactsOperations.DB_fetchContacts());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <div className={styles.error}>{error.message}, no conection to DB</div>\r\n      ) : (\r\n        <ul className={styles.ContactsList}>\r\n          {filteredContacts &&\r\n            filteredContacts.map(contact => (\r\n              <li key={contact._id}>\r\n                {contact.name}\r\n                {': '}\r\n                {contact.number}\r\n                <IconButton\r\n                  className={styles.editButton}\r\n                  aria-label=\"edit\"\r\n                  size=\"small\"\r\n                  onClick={handleOpen}\r\n                  contactid={contact._id}\r\n                >\r\n                  <EditTwoToneIcon />\r\n                </IconButton>\r\n\r\n                <IconButton\r\n                  className={styles.deleteButton}\r\n                  aria-label=\"delete\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    deleteItem(contact._id);\r\n                  }}\r\n                >\r\n                  <CancelTwoToneIcon />\r\n                </IconButton>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n      <BasicModal>\r\n        <EditContact buttonTitle=\"Edit contact\" />\r\n      </BasicModal>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsSelectors, contactsOperations } from \"redux/contacts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport styles from \"./SearchContacts.module.css\";\r\n\r\nexport default function SearchContacts() {\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.searchContactsWrapper}>\r\n      <TextField\r\n        className={styles.searchContacts}\r\n        onChange={(e) =>\r\n          dispatch(contactsOperations.filterContacts(e.target.value))\r\n        }\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        size=\"small\"\r\n        label=\"Find contacts by name\"\r\n        variant=\"outlined\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Switch } from 'react-router-dom';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authOperations, authSelectors } from './redux/auth';\r\nimport { contactsOperations } from 'redux/contacts';\r\n\r\nimport PrivateRoute from 'components/PrivateRoute';\r\nimport PublicRoute from 'components/PublicRoute';\r\n\r\nimport Container from 'components/Container/Container';\r\nimport AppBar from 'components/AppBar/AppBar';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactsList from 'components/ContactsList/ContactsList';\r\nimport SearchContacts from 'components/SearchContacts/SearchContacts';\r\n\r\nconst HomeView = lazy(() => import('./components/HomeView/HomeView'));\r\nconst RegisterView = lazy(() =>\r\n  import('./components/RegisterView/RegisterView'),\r\n);\r\nconst LogInView = lazy(() => import('./components/LogInView/LogInView'));\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  const isFetchingCurrentUser = useSelector(\r\n    authSelectors.isFetchingCurrentUser,\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function refreshPage() {\r\n      await dispatch(authOperations.getUserInfo());\r\n      if (isLoggedIn) {\r\n        dispatch(contactsOperations.DB_fetchContacts());\r\n      }\r\n    }\r\n    refreshPage();\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n      <Container>\r\n        <AppBar />\r\n\r\n        <Switch>\r\n          <Suspense fallback={''}>\r\n            <PublicRoute path=\"/\" exact>\r\n              <HomeView />\r\n            </PublicRoute>\r\n\r\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n              <ContactForm buttonTitle=\"Add contact\" />\r\n              <SearchContacts />\r\n              <ContactsList />\r\n            </PrivateRoute>\r\n\r\n            <PublicRoute path=\"/register\" restricted>\r\n              <RegisterView />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n              <LogInView />\r\n            </PublicRoute>\r\n          </Suspense>\r\n        </Switch>\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport * as authOperations from \"./authOperations\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n  registerUserRejected: false,\r\n  logInUserRejected: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.registerUser.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.registerUserRejected = false;\r\n    },\r\n\r\n    [authOperations.registerUser.rejected](state, _) {\r\n      state.registerUserRejected = true;\r\n    },\r\n\r\n    [authOperations.registerUserRejected](state, _) {\r\n      state.registerUserRejected = false;\r\n    },\r\n\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.logInUserRejected = false;\r\n    },\r\n\r\n    [authOperations.logIn.rejected](state, _) {\r\n      state.logInUserRejected = true;\r\n    },\r\n\r\n    [authOperations.logInUserRejected](state, _) {\r\n      state.logInUserRejected = false;\r\n    },\r\n\r\n    [authOperations.logOut.fulfilled](state, _) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [authOperations.getUserInfo.pending](state, _) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n\r\n    [authOperations.getUserInfo.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n\r\n    [authOperations.getUserInfo.rejected](state, _) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","const getUserName = (state) => state.auth.user.name\r\nconst isLoggedIn = (state) => state.auth.isLoggedIn\r\nconst registerUserRejected = (state) => state.auth.registerUserRejected\r\nconst isFetchingCurrentUser = (state) => state.auth.isFetchingCurrentUser\r\nconst logInUserRejected = (state) => state.auth.logInUserRejected\r\n\r\nexport {\r\n  getUserName,\r\n  isLoggedIn,\r\n  isFetchingCurrentUser,\r\n  registerUserRejected,\r\n  logInUserRejected,\r\n}\r\n","import axios from 'axios';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://contacts-back.herokuapp.com/api';\r\n// axios.defaults.baseURL = 'http://localhost:4000/api';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/users/signup', credentials);\r\n      token.set(response.data.ResponseBody.token);\r\n      return response.data.ResponseBody;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/users/login', credentials);\r\n      token.set(response.data.ResponseBody.token);\r\n      return response.data.ResponseBody;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const getUserInfo = createAsyncThunk(\r\n  'auth/getUserInfo',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const LStoken = state.auth.token;\r\n\r\n    if (LStoken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(LStoken);\r\n    try {\r\n      const response = await axios.get('/users/current');\r\n      return response.data.ResponseBody;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n  },\r\n);\r\n\r\nexport const logInUserRejected = createAction('auth/logInUserRejected');\r\nexport const registerUserRejected = createAction('auth/registerUserRejected');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3mrbM\",\"activeLink\":\"AuthNav_activeLink__27OJk\",\"AuthNav\":\"AuthNav_AuthNav__1r6C6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3ATDV\",\"activeLink\":\"Navigation_activeLink__qCcfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__39aGB\",\"name\":\"ContactForm_name__2qvag\",\"number\":\"ContactForm_number__2SCQP\",\"button\":\"ContactForm_button__2bwV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactsList_ContactsList__143FW\",\"error\":\"ContactsList_error__17diy\",\"editButton\":\"ContactsList_editButton__1RwPp\",\"deleteButton\":\"ContactsList_deleteButton__1Twuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"EditContactModal_contactForm__1oQun\",\"name\":\"EditContactModal_name__2DkmE\",\"number\":\"EditContactModal_number__25dCu\",\"button\":\"EditContactModal_button__3OGwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__3JG9s\",\"name\":\"UserMenu_name__2OrCc\",\"MuiButtonBase-root\":\"UserMenu_MuiButtonBase-root__1kuzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContactsWrapper\":\"SearchContacts_searchContactsWrapper__3mknz\",\"searchContacts\":\"SearchContacts_searchContacts__2B7d3\"};"],"sourceRoot":""}